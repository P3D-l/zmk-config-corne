/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        accentE {
            bindings = <&macroE>;
            key-positions = <11 3>;
        };

        accentA {
            bindings = <&macroA>;
            key-positions = <11 13>;
        };

        accentI {
            bindings = <&macroI>;
            key-positions = <8 11>;
        };

        accentO {
            bindings = <&macroO>;
            key-positions = <11 9>;
        };

        accentU {
            bindings = <&macroU>;
            key-positions = <11 8>;
        };

        questionmarc {
            bindings = <&question>;
            key-positions = <41 2>;
        };

        slash {
            bindings = <&kp KP_DIVIDE>;
            key-positions = <41 1>;
        };

        greetings {
            bindings = <&greeting>;
            key-positions = <29 30>;
        };

        greetingEvening {
            bindings = <&greetingEvening>;
            key-positions = <29 31>;
        };

        layerThree {
            bindings = <&tog 3>;
            key-positions = <39 37>;
        };
    };

    macros {
        macroE: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp E>;
            label = "NEW_MACRO";
        };

        macroA: macroA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp A>;
            label = "MACROA";
        };

        macroI: macroI {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp I>;
            label = "MACROI";
        };

        macroU: macroU {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp U>;
            label = "MACROU";
        };

        macroO: macroO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp O>;
            label = "MACROO";
        };

        question: question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp RIGHT_ALT>;

            label = "QUESTION";
        };

        greeting: greeting {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp O &kp M &kp SPACE &kp D &kp I &kp A &kp SPACE &kp M &kp E &kp SPACE &kp C &kp H &kp A &kp M &kp O &kp SPACE &kp LS(P) &kp E &kp D &kp R &kp O>;
            label = "GREETING";
        };

        greetingEvening: greetingEvening {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp O &kp A &kp SPACE &kp T &kp A &kp R &kp D &kp E &kp SPACE &kp M &kp E &kp SPACE &kp C &kp H &kp A &kp M &kp O &kp SPACE &kp LS(P) &kp E &kp D &kp R &kp O>;
            label = "GREETINGEVENING";
        };

        rbr_macro: rbr_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp DOWN &kp DOWN &kp DOWN &kp ENTER &kp UP_ARROW &kp ENTER>;
            label = "RBR_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y  &kp U      &kp I         &kp O      &kp P          &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F   &kp G        &kp H  &kp J      &kp K         &kp L      &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V   &kp B        &kp B  &kp N      &kp M         &kp COMMA  &kp PERIOD     &kp ESC
                                &kp LGUI  &tog 1  &kp ENTER    &mo 2  &kp SPACE  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &trans  &kp N2  &kp E      &trans  &trans    &bt BT_CLR  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4     &kp BSPC
&trans   &kp N1  &kp W   &kp N3     &trans  &trans    &trans      &kp LEFT         &kp DOWN      &kp UP_ARROW      &kp RIGHT_ARROW  &trans
&trans   &kp A   &kp S   &kp D      &kp C   &trans    &trans      &kp C_VOLUME_UP  &kp C_VOL_DN  &kp K_PLAY_PAUSE  &trans           &trans
                         &kp SPACE  &trans  &kp F     &trans      &trans           &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp SLASH
                          &kp LGUI  &trans    &trans       &trans     &trans     &kp LEFT_ALT
            >;
        };

        layer_3 {
            bindings = <
&trans   &trans    &trans    &trans  &trans     &trans     &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans     &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&kp ESC  &trans    &trans    &trans  &trans     &trans     &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                             &trans  &trans     &kp RET    &trans  &trans  &kp N0
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
